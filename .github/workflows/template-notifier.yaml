name: Watch for New YAML Files

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  notify_new_yaml:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Restore notification history from cache
      - name: Restore notification history
        id: restore-history
        uses: actions/cache@v4
        with:
          path: .notified/history.txt
          key: nuclei-templates-notification-history
          restore-keys: |
            nuclei-templates-notification-history

      # Step 2: Initialize history file if it doesn't exist
      - name: Initialize history
        run: |
          mkdir -p .notified
          touch .notified/history.txt
          # Clean existing history file
          sort -u .notified/history.txt -o .notified/history.txt

      # Step 3: Get current YAML files from repository
      - name: Get current templates
        id: get_templates
        run: |
          # Get all YAML files from the repo
          curl -s https://api.github.com/repos/anderwordzkkkz/nuclei-templates/contents/ \
          | jq -r '.[] | select(.name | endswith(".yaml")) | .name' > current_templates.txt
          
          # Count total YAML files
          echo "total=$(wc -l < current_templates.txt)" >> $GITHUB_OUTPUT

      # Step 4: Find new templates not in history
      - name: Find new templates
        id: find_new
        run: |
          # Find only files that exist in current_templates.txt but not in history
          comm -23 <(sort current_templates.txt) <(sort .notified/history.txt) > new_templates.txt || true
          
          # Count new templates
          echo "new_count=$(wc -l < new_templates.txt)" >> $GITHUB_OUTPUT
          
          # If no new templates, exit early
          if [ ! -s new_templates.txt ]; then
            echo "No new templates found"
            exit 0
          fi

      # Step 5: Send notification for new templates
      - name: Notify new templates
        if: steps.find_new.outputs.new_count != '0'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          MESSAGE="ðŸ§© **New Nuclei YAML Templates Added!**"
          while read FILE; do
            MESSAGE="$MESSAGE\n- \`$FILE\` <https://github.com/anderwordzkkkz/nuclei-templates/blob/main/$FILE>"
          done < new_templates.txt

          echo -e "$MESSAGE" | jq -Rs '{content: .}' > payload.json
          curl -H "Content-Type: application/json" -X POST -d @payload.json "$DISCORD_WEBHOOK"

          # Update history with newly notified files
          cat new_templates.txt >> .notified/history.txt
          sort -u .notified/history.txt -o .notified/history.txt

      # Step 6: Save updated history
      - name: Save notification history
        uses: actions/cache@v4
        with:
          path: .notified/history.txt
          key: nuclei-templates-notification-history-${{ hashFiles('.notified/history.txt') }}
